var searchIndex = JSON.parse('{\
"aquamarine":{"doc":"","i":[[3,"AquamarineApi","aquamarine","",null,null],[3,"AquamarineBackend","","",null,null],[3,"AwaitedEffects","","Effects produced by particle execution along with …",null,null],[12,"effects","","Description of effects (e.g next_peer_pks of …",0,null],[12,"out","","Destination that waits to receive StepperEffects produced …",0,null],[3,"AwaitedParticle","","A particle scheduled for execution. Execution will …",null,null],[12,"particle","","",1,null],[12,"out","","",1,null],[3,"VmPoolConfig","","",null,null],[12,"current_peer_id","","",2,null],[12,"workdir","","Working dir for steppers",2,null],[12,"air_interpreter","","Path to AIR interpreter .wasm file (aquamarine.wasm)",2,null],[12,"services_dir","","Dir to persist info about running steppers",2,null],[12,"particles_dir","","Dir for stepper to persist particle data to merge it",2,null],[12,"pool_size","","Number of VMs to create",2,null],[3,"SendParticle","","",null,null],[12,"particle","","",3,null],[12,"target","","",3,null],[3,"StepperEffects","","Effects produced by particle execution. Currently the …",null,null],[12,"particles","","Particles that either correspond to <code>next_peer_pks</code> or …",4,null],[3,"Plumber","","",null,null],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"vzip","","",6,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"as_ref","","",1,[[],["particle",3]]],[11,"into","","",1,[[]]],[11,"clone","","",6,[[],["aquamarineapi",3]]],[11,"clone","","",2,[[],["vmpoolconfig",3]]],[11,"clone","","",3,[[],["sendparticle",3]]],[11,"clone","","",4,[[],["steppereffects",3]]],[11,"deref","","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"new","","",5,[[["closuredescriptor",6],["vmpoolconfig",3]]]],[11,"poll","","",5,[[["context",3]],["poll",4]]],[11,"start","","",5,[[],["joinhandle",3]]],[11,"new","","",6,[[["backpressuredoutlet",6]]]],[11,"handle","","Send particle to interpreters pool and wait response back",6,[[["particle",3]],[["result",4],["boxfuture",6]]]],[11,"ok","","",0,[[["oneshotoutlet",6],["result",4],["steppereffects",3]]]],[11,"expired","","",0,[[["awaitedparticle",3]]]],[11,"err","","",0,[[["oneshotoutlet",6],["result",4],["aquamarineapierror",4]]]],[11,"new","","",2,[[["peerid",3],["pathbuf",3]],[["error",3],["result",4]]]],[11,"create_dirs","","",2,[[],[["error",3],["result",4]]]],[11,"new","","",7,[[["closuredescriptor",6],["vmpoolconfig",3]]]],[11,"ingest","","Receives and ingests incoming particle: creates a new …",7,[[["awaitedparticle",3]]]],[11,"poll","","",7,[[["context",3]],[["awaitedeffects",3],["poll",4]]]]],"p":[[3,"AwaitedEffects"],[3,"AwaitedParticle"],[3,"VmPoolConfig"],[3,"SendParticle"],[3,"StepperEffects"],[3,"AquamarineBackend"],[3,"AquamarineApi"],[3,"Plumber"]]},\
"async_unlock":{"doc":"This crate describes functions to work with async_std\'s …","i":[[5,"unlock_f","async_unlock","Performs async computation on a value inside Mutex This …",null,[[["mutex",3]]]],[5,"unlock","","Performs computation on a value inside Mutex, unlocking …",null,[[["mutex",3]]]]],"p":[]},\
"config_utils":{"doc":"","i":[[5,"blueprint_dir","config_utils","",null,[[["pathbuf",3]],["pathbuf",3]]],[5,"create_dirs","","",null,[[],[["error",3],["result",4]]]],[5,"modules_dir","","",null,[[["pathbuf",3]],["pathbuf",3]]],[5,"particles_dir","","",null,[[["pathbuf",3]],["pathbuf",3]]],[5,"services_dir","","",null,[[["pathbuf",3]],["pathbuf",3]]],[5,"to_abs_path","","",null,[[["pathbuf",3]],["pathbuf",3]]],[5,"to_peer_id","","",null,[[["keypair",3]],["peerid",3]]],[5,"workdir","","",null,[[["pathbuf",3]],["pathbuf",3]]]],"p":[]},\
"connection_pool":{"doc":"","i":[[8,"ConnectionPoolT","connection_pool","",null,null],[10,"dial","","",0,[[["multiaddr",3]],[["option",4],["boxfuture",6]]]],[10,"connect","","",0,[[["contact",3]],["boxfuture",6]]],[10,"disconnect","","",0,[[["contact",3]],["boxfuture",6]]],[10,"is_connected","","",0,[[["peerid",3]],["boxfuture",6]]],[10,"get_contact","","",0,[[["peerid",3]],[["option",4],["boxfuture",6]]]],[10,"send","","",0,[[["particle",3],["contact",3]],["boxfuture",6]]],[10,"count_connections","","",0,[[],["boxfuture",6]]],[10,"lifecycle_events","","",0,[[],[["lifecycleevent",4],["boxstream",6]]]],[3,"Contact","","",null,null],[12,"peer_id","","",1,null],[12,"addresses","","",1,null],[4,"LifecycleEvent","","",null,null],[13,"Connected","","",2,null],[13,"Disconnected","","",2,null],[3,"ConnectionPoolApi","","",null,null],[3,"ConnectionPoolInlet","","",null,null],[3,"ConnectionPoolBehaviour","","",null,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"dial","","",4,[[["multiaddr",3]],[["option",4],["boxfuture",6]]]],[11,"connect","","",4,[[["contact",3]],["boxfuture",6]]],[11,"disconnect","","",4,[[["contact",3]],["boxfuture",6]]],[11,"is_connected","","",4,[[["peerid",3]],["boxfuture",6]]],[11,"get_contact","","",4,[[["peerid",3]],[["option",4],["boxfuture",6]]]],[11,"send","","",4,[[["particle",3],["contact",3]],["boxfuture",6]]],[11,"count_connections","","",4,[[],["boxfuture",6]]],[11,"lifecycle_events","","",4,[[],[["lifecycleevent",4],["boxstream",6]]]],[11,"clone","","",4,[[],["connectionpoolapi",3]]],[11,"clone","","",1,[[],["contact",3]]],[11,"clone","","",2,[[],["lifecycleevent",4]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"new_handler","","",3,[[]]],[11,"addresses_of_peer","","",3,[[["peerid",3]],[["multiaddr",3],["vec",3]]]],[11,"inject_connected","","",3,[[["peerid",3]]]],[11,"inject_disconnected","","",3,[[["peerid",3]]]],[11,"inject_connection_established","","",3,[[["peerid",3],["connectedpoint",4],["connectionid",3]]]],[11,"inject_address_change","","",3,[[["peerid",3],["connectedpoint",4],["connectionid",3]]]],[11,"inject_connection_closed","","",3,[[["peerid",3],["connectedpoint",4],["connectionid",3]]]],[11,"inject_addr_reach_failure","","",3,[[["multiaddr",3],["error",8],["peerid",3],["option",4]]]],[11,"inject_dial_failure","","",3,[[["peerid",3]]]],[11,"inject_new_listen_addr","","",3,[[["multiaddr",3]]]],[11,"inject_expired_listen_addr","","",3,[[["multiaddr",3]]]],[11,"inject_new_external_addr","","",3,[[["multiaddr",3]]]],[11,"inject_listener_error","","",3,[[["listenerid",3],["error",8]]]],[11,"inject_listener_closed","","",3,[[["listenerid",3],["result",4],["error",3]]]],[11,"inject_event","","",3,[[["connectionid",3],["peerid",3]]]],[11,"poll","","",3,[[["context",3]],[["networkbehaviouraction",4],["poll",4]]]],[11,"new_handler","","",5,[[]]],[11,"addresses_of_peer","","",5,[[["peerid",3]],[["vec",3],["multiaddr",3]]]],[11,"inject_connected","","",5,[[["peerid",3]]]],[11,"inject_disconnected","","",5,[[["peerid",3]]]],[11,"inject_connection_established","","",5,[[["peerid",3],["connectedpoint",4],["connectionid",3]]]],[11,"inject_addr_reach_failure","","",5,[[["option",4],["peerid",3],["multiaddr",3],["error",8]]]],[11,"inject_dial_failure","","",5,[[["peerid",3]]]],[11,"inject_event","","",5,[[["peerid",3],["connectionid",3]]]],[11,"poll","","",5,[[["context",3]],[["networkbehaviouraction",4],["poll",4]]]],[11,"inject_event","","",3,[[]]],[11,"new","","",3,[[["connectionpoolbehaviour",3]]]],[11,"dial","","Dial <code>address</code>, and send contact back on success <code>None</code> means …",5,[[["multiaddr",3],["option",4],["oneshotoutlet",6]]]],[11,"connect","","Connect to the contact by all of its known addresses and …",5,[[["oneshotoutlet",6],["contact",3]]]],[11,"disconnect","","",5,[[["oneshotoutlet",6],["contact",3]]]],[11,"is_connected","","Returns whether given peer is connected or not",5,[[["peerid",3],["oneshotoutlet",6]]]],[11,"get_contact","","Returns contact for a given peer if it is known",5,[[["peerid",3],["option",4],["oneshotoutlet",6]]]],[11,"send","","Sends a particle to a connected contact. Returns whether …",5,[[["oneshotoutlet",6],["particle",3],["contact",3]]]],[11,"count_connections","","Returns number of connected contacts",5,[[["oneshotoutlet",6]]]],[11,"add_subscriber","","Subscribes given channel for all <code>LifecycleEvent</code>s",5,[[["lifecycleevent",4],["outlet",6]]]],[11,"new","","",5,[[["peerid",3],["protocolconfig",3]]]],[11,"new","","",1,[[["peerid",3],["vec",3],["multiaddr",3]]]]],"p":[[8,"ConnectionPoolT"],[3,"Contact"],[4,"LifecycleEvent"],[3,"ConnectionPoolInlet"],[3,"ConnectionPoolApi"],[3,"ConnectionPoolBehaviour"]]},\
"control_macro":{"doc":"","i":[[14,"ok_get","control_macro","Takes option as an argument, unwraps if <code>Some</code>, exit …",null,null],[14,"get_return","","Retrieves value from <code>Some</code>, returns on <code>None</code>",null,null],[14,"unwrap_return","","Retrieves value from <code>Some</code>, returns on <code>None</code>",null,null]],"p":[]},\
"ctrlc_adapter":{"doc":"","i":[[5,"block_until_ctrlc","ctrlc_adapter","",null,[[]]]],"p":[]},\
"fluence_client":{"doc":"","i":[[3,"Client","fluence_client","",null,null],[12,"key_pair","","",0,null],[12,"peer_id","","",0,null],[4,"Transport","","",null,null],[13,"Memory","","",1,null],[13,"Network","","",1,null],[4,"ClientCommand","","Describes commands sent from client to relay node; also …",null,null],[13,"Particle","","",2,null],[12,"particle","fluence_client::ClientCommand","",3,null],[4,"ClientEvent","fluence_client","",null,null],[13,"Particle","","",4,null],[12,"sender","fluence_client::ClientEvent","",5,null],[12,"particle","","",5,null],[13,"NewConnection","fluence_client","",4,null],[12,"peer_id","fluence_client::ClientEvent","",6,null],[12,"multiaddr","","",6,null],[11,"from","fluence_client","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"into","","",2,[[],["particle",3]]],[11,"clone","","",1,[[],["transport",4]]],[11,"clone","","",2,[[],["clientcommand",4]]],[11,"clone","","",4,[[],["clientevent",4]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",4,[[],["result",4]]],[11,"is_network","","",1,[[]]],[11,"from_maddr","","",1,[[["multiaddr",3]]]],[11,"send","","",0,[[["particle",3],["peerid",3]]]],[11,"receive_one","","",0,[[]]],[11,"stop","","",0,[[]]],[11,"sign","","",0,[[],["vec",3]]],[11,"connect","","",0,[[["multiaddr",3]]]],[11,"connect_with","","",0,[[["multiaddr",3],["transport",4]]]]],"p":[[3,"Client"],[4,"Transport"],[4,"ClientCommand"],[13,"Particle"],[4,"ClientEvent"],[13,"Particle"],[13,"NewConnection"]]},\
"fluence_libp2p":{"doc":"","i":[[0,"types","fluence_libp2p","",null,null],[6,"Inlet","fluence_libp2p::types","An unbounded input port of actor (aka Akka Inlet). Could …",null,null],[6,"Outlet","","An unbounded output port of actor (aka Akka Outlet). …",null,null],[6,"BackPressuredInlet","","An input port of actor (aka Akka Inlet) with backpressure …",null,null],[6,"BackPressuredOutlet","","An output port of actor (aka Akka Outlet) with …",null,null],[6,"OneshotInlet","","A oneshot input port of actor (aka Akka Inlet). Could be …",null,null],[6,"OneshotOutlet","","A oneshot output port of actor (aka Akka Outlet). Could …",null,null],[0,"peerid_serializer","fluence_libp2p","",null,null],[5,"serialize","fluence_libp2p::peerid_serializer","",null,[[["peerid",3]],["result",4]]],[5,"deserialize","","",null,[[],[["result",4],["peerid",3]]]],[0,"provider_serializer","fluence_libp2p","",null,null],[5,"serialize","fluence_libp2p::provider_serializer","",null,[[],["result",4]]],[5,"deserialize","","",null,[[],[["result",4],["vec",3]]]],[5,"remote_multiaddr","fluence_libp2p","Retrieves multiaddr of the remote peer",null,[[["connectedpoint",4]],["multiaddr",3]]],[3,"RandomPeerId","","",null,null],[5,"build_memory_transport","","",null,[[["keypair",4]],["boxed",3]]],[5,"build_transport","","Creates transport that is common for all connections.",null,[[["keypair",4],["duration",3]],["boxed",3]]],[3,"PeerId","","Identifier of a peer of the network.",null,null],[14,"event_polling","","Intended to simplify simple polling functions that just …",null,null],[14,"generate_swarm_event_type","","Generates a type of events produced by Swarm by its name",null,null],[14,"poll_loop","","",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"get_hash","","",1,[[]]],[11,"try_from","","",1,[[["global",3],["vec",3]],[["result",4],["peerid",3]]]],[11,"try_from","","",1,[[["multihash",3],["uint",3]],[["result",4],["peerid",3]]]],[11,"from","","",1,[[["publickey",4]],["peerid",3]]],[11,"clone","","",1,[[],["peerid",3]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"eq","","",1,[[["peerid",3]]]],[11,"ne","","",1,[[["peerid",3]]]],[11,"partial_cmp","","",1,[[["peerid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["peerid",3]]]],[11,"le","","",1,[[["peerid",3]]]],[11,"gt","","",1,[[["peerid",3]]]],[11,"ge","","",1,[[["peerid",3]]]],[11,"as_ref","","",1,[[],["multihash",3]]],[11,"cmp","","",1,[[["peerid",3]],["ordering",4]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"hash","","",1,[[]]],[11,"from_str","","",1,[[],[["peerid",3],["result",4]]]],[11,"random","","Generates PeerId from random Ed25519 key",0,[[],["peerid",3]]],[11,"from_public_key","","Builds a <code>PeerId</code> from a public key.",1,[[["publickey",4]],["peerid",3]]],[11,"from_bytes","","Parses a <code>PeerId</code> from bytes.",1,[[],[["result",4],["peerid",3],["error",4]]]],[11,"from_multihash","","Tries to turn a <code>Multihash</code> into a <code>PeerId</code>.",1,[[["multihash",3],["uint",3]],[["peerid",3],["result",4],["multihash",3]]]],[11,"random","","Generates a random peer ID from a cryptographically …",1,[[],["peerid",3]]],[11,"to_bytes","","Returns a raw bytes representation of this <code>PeerId</code>.",1,[[],[["global",3],["vec",3]]]],[11,"to_base58","","Returns a base-58 encoded string of this <code>PeerId</code>.",1,[[],["string",3]]],[11,"is_public_key","","Checks whether the public key passed as parameter matches …",1,[[["publickey",4]],["option",4]]],[11,"as_public_key","","Returns public key if it was inlined in this <code>PeerId</code>.",1,[[],[["option",4],["publickey",4]]]],[11,"is_inlining","","Returns true if this peer id is inlining (usually means …",1,[[]]]],"p":[[3,"RandomPeerId"],[3,"PeerId"]]},\
"host_closure":{"doc":"","i":[[3,"Args","host_closure","Arguments passed by VM to host on call_service",null,null],[12,"service_id","","",0,null],[12,"function_name","","",0,null],[12,"function_args","","",0,null],[12,"tetraplets","","",0,null],[4,"ArgsError","","",null,null],[13,"MissingField","","",1,null],[13,"SerdeJson","","",1,null],[12,"field","host_closure::ArgsError","",2,null],[12,"err","","",2,null],[13,"InvalidFormat","host_closure","",1,null],[12,"field","host_closure::ArgsError","",3,null],[12,"err","","",3,null],[3,"JError","host_closure","An error that can be created from any other error …",null,null],[5,"closure","","Converts Fn into Closure, converting error into Option",null,[[],["closure",6]]],[5,"closure_args","","Converts Fn into Closure, converting error into Option",null,[[],["closure",6]]],[5,"closure_opt","","Converts Fn into Closure, converting error into Option",null,[[],["closure",6]]],[5,"closure_params","","Converts Fn into Closure, converting error into Option",null,[[],["particleclosure",6]]],[6,"Closure","","",null,null],[6,"ClosureDescriptor","","",null,null],[6,"ParticleClosure","","Closure that cares about [[ParticleParameters]]",null,null],[3,"ParticleParameters","","Information about the particle that is being executed by …",null,null],[12,"init_user_id","","",4,null],[12,"particle_id","","",4,null],[5,"from_base58","","",null,[[],[["result",4],["vec",3],["argserror",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",5,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"default","","",4,[[],["particleparameters",3]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",4,[[],["particleparameters",3]]],[11,"from","","",5,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"parse","","Construct Args from <code>Vec<IValue></code>",0,[[["vec",3],["ivalue",4]],[["result",4],["args",3],["argserror",4]]]],[11,"next","","Retrieves next json value from iterator, parse it to T",0,[[],[["result",4],["deserialize",8],["argserror",4]]]],[11,"maybe_next","","Retrieves a json value from iterator if it\'s not empty, …",0,[[],[["result",4],["option",4],["argserror",4]]]]],"p":[[3,"Args"],[4,"ArgsError"],[13,"SerdeJson"],[13,"InvalidFormat"],[3,"ParticleParameters"],[3,"JError"]]},\
"ivalue_utils":{"doc":"","i":[[4,"IType","ivalue_utils","Represents the types supported by WIT.",null,null],[13,"S8","","A 8-bits signed integer.",0,null],[13,"S16","","A 16-bits signed integer.",0,null],[13,"S32","","A 32-bits signed integer.",0,null],[13,"S64","","A 64-bits signed integer.",0,null],[13,"U8","","A 8-bits unsigned integer.",0,null],[13,"U16","","A 16-bits unsigned integer.",0,null],[13,"U32","","A 32-bits unsigned integer.",0,null],[13,"U64","","A 64-bits unsigned integer.",0,null],[13,"F32","","A 32-bits float.",0,null],[13,"F64","","A 64-bits float.",0,null],[13,"String","","A string.",0,null],[13,"Array","","An array of values of the same type.",0,null],[13,"Anyref","","An <code>any</code> reference.",0,null],[13,"I32","","A 32-bits integer (as defined in WebAssembly core).",0,null],[13,"I64","","A 64-bits integer (as defined in WebAssembly core).",0,null],[13,"Record","","A record contains record index from interfaces AST.",0,null],[4,"IValue","","A WIT value.",null,null],[13,"S8","","A 8-bits signed integer.",1,null],[13,"S16","","A 16-bits signed integer.",1,null],[13,"S32","","A 32-bits signed integer.",1,null],[13,"S64","","A 64-bits signed integer.",1,null],[13,"U8","","A 8-bits unsigned integer.",1,null],[13,"U16","","A 16-bits unsigned integer.",1,null],[13,"U32","","A 32-bits unsigned integer.",1,null],[13,"U64","","A 64-bits unsigned integer.",1,null],[13,"F32","","A 32-bits float.",1,null],[13,"F64","","A 64-bits float.",1,null],[13,"String","","A string.",1,null],[13,"Array","","A byte array.",1,null],[13,"I32","","A 32-bits integer (as defined in WebAssembly core).",1,null],[13,"I64","","A 64-bits integer (as defiend in WebAssembly core).",1,null],[13,"Record","","A record.",1,null],[5,"as_str","","",null,[[["ivalue",4]],["option",4]]],[5,"into_string","","",null,[[["ivalue",4]],[["string",3],["option",4]]]],[5,"into_record_opt","","Converts result of call_service into <code>IValue::Record</code>",null,[[["jvalue",4],["result",4],["option",4]],[["ivalue",4],["option",4]]]],[5,"into_record","","Converts result of call_service into <code>IValue::Record</code>",null,[[["jvalue",4],["result",4]],[["ivalue",4],["option",4]]]],[5,"ok","","Converts successful result of call_service into …",null,[[["jvalue",4]],[["ivalue",4],["option",4]]]],[5,"ivalue_ok","","Converts successful result of app service execution into …",null,[[["ivalue",4]],[["ivalue",4],["option",4]]]],[5,"error","","Converts erroneous result of call_service into …",null,[[["jvalue",4]],[["ivalue",4],["option",4]]]],[5,"unit","","Converts empty result of call_service into <code>IValue::Record</code>",null,[[],[["ivalue",4],["option",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"serialize","","",0,[[],["result",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[["string",3]],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"deserialize","","",0,[[],[["itype",4],["result",4]]]],[11,"parse","","",0,[[["parser",3]],[["itype",4],["error",3],["result",4]]]],[11,"default","","",1,[[],["ivalue",4]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",0,[[],["itype",4]]],[11,"clone","","",1,[[],["ivalue",4]]],[11,"hash","","",0,[[]]],[11,"to_bytes","","",0,[[],[["error",3],["result",4]]]],[11,"eq","","",0,[[["itype",4]]]],[11,"ne","","",0,[[["itype",4]]]],[11,"eq","","",1,[[["ivalue",4]]]],[11,"ne","","",1,[[["ivalue",4]]]]],"p":[[4,"IType"],[4,"IValue"]]},\
"json_utils":{"doc":"","i":[[0,"base64_serde","json_utils","",null,null],[5,"serialize","json_utils::base64_serde","",null,[[["vec",3]],["result",4]]],[5,"deserialize","","",null,[[],[["vec",3],["result",4]]]],[5,"into_string","json_utils","",null,[[["jvalue",4]],[["string",3],["option",4]]]],[5,"into_array","","",null,[[["jvalue",4]],[["vec",3],["option",4]]]],[5,"err_as_value","","Converts an error into IValue::String",null,[[["error",8]],["jvalue",4]]]],"p":[]},\
"kademlia":{"doc":"","i":[[8,"KademliaApiT","kademlia","",null,null],[10,"bootstrap","","",0,[[],[["result",4],["boxfuture",6]]]],[10,"local_lookup","","",0,[[["peerid",3]],[["boxfuture",6],["result",4]]]],[10,"discover_peer","","",0,[[["peerid",3]],[["boxfuture",6],["result",4]]]],[10,"neighborhood","","",0,[[["multihash",6]],[["result",4],["boxfuture",6]]]],[3,"KademliaApi","","",null,null],[3,"KademliaApiInlet","","",null,null],[3,"Kademlia","","",null,null],[3,"KademliaConfig","","",null,null],[12,"peer_id","","",1,null],[12,"keypair","","",1,null],[12,"kad_config","","",1,null],[4,"KademliaError","","",null,null],[13,"NoPeersFound","","",2,null],[13,"Timeout","","",2,null],[13,"Cancelled","","",2,null],[13,"NoKnownPeers","","",2,null],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"as_fail","","",2,[[],["fail",8]]],[11,"bootstrap","","",4,[[],[["result",4],["boxfuture",6]]]],[11,"local_lookup","","",4,[[["peerid",3]],[["boxfuture",6],["result",4]]]],[11,"discover_peer","","",4,[[["peerid",3]],[["boxfuture",6],["result",4]]]],[11,"neighborhood","","",4,[[["multihash",6]],[["result",4],["boxfuture",6]]]],[11,"clone","","",4,[[],["kademliaapi",3]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"new_handler","","",3,[[]]],[11,"addresses_of_peer","","",3,[[["peerid",3]],[["vec",3],["multiaddr",3]]]],[11,"inject_connected","","",3,[[["peerid",3]]]],[11,"inject_disconnected","","",3,[[["peerid",3]]]],[11,"inject_connection_established","","",3,[[["connectionid",3],["connectedpoint",4],["peerid",3]]]],[11,"inject_address_change","","",3,[[["peerid",3],["connectionid",3],["connectedpoint",4]]]],[11,"inject_connection_closed","","",3,[[["connectionid",3],["connectedpoint",4],["peerid",3]]]],[11,"inject_addr_reach_failure","","",3,[[["peerid",3],["multiaddr",3],["error",8],["option",4]]]],[11,"inject_dial_failure","","",3,[[["peerid",3]]]],[11,"inject_new_listen_addr","","",3,[[["multiaddr",3]]]],[11,"inject_expired_listen_addr","","",3,[[["multiaddr",3]]]],[11,"inject_new_external_addr","","",3,[[["multiaddr",3]]]],[11,"inject_listener_error","","",3,[[["listenerid",3],["error",8]]]],[11,"inject_listener_closed","","",3,[[["result",4],["listenerid",3],["error",3]]]],[11,"inject_event","","",3,[[["connectionid",3],["peerid",3]]]],[11,"poll","","",3,[[["context",3]],[["networkbehaviouraction",4],["poll",4]]]],[11,"new_handler","","",5,[[]]],[11,"addresses_of_peer","","",5,[[["peerid",3]],[["vec",3],["multiaddr",3]]]],[11,"inject_connected","","",5,[[["peerid",3]]]],[11,"inject_disconnected","","",5,[[["peerid",3]]]],[11,"inject_connection_established","","",5,[[["connectionid",3],["connectedpoint",4],["peerid",3]]]],[11,"inject_address_change","","",5,[[["peerid",3],["connectionid",3],["connectedpoint",4]]]],[11,"inject_connection_closed","","",5,[[["connectionid",3],["connectedpoint",4],["peerid",3]]]],[11,"inject_addr_reach_failure","","",5,[[["peerid",3],["multiaddr",3],["error",8],["option",4]]]],[11,"inject_dial_failure","","",5,[[["peerid",3]]]],[11,"inject_new_listen_addr","","",5,[[["multiaddr",3]]]],[11,"inject_expired_listen_addr","","",5,[[["multiaddr",3]]]],[11,"inject_new_external_addr","","",5,[[["multiaddr",3]]]],[11,"inject_listener_error","","",5,[[["listenerid",3],["error",8]]]],[11,"inject_listener_closed","","",5,[[["result",4],["listenerid",3],["error",3]]]],[11,"inject_event","","",5,[[["connectionid",3],["peerid",3]]]],[11,"poll","","",5,[[["context",3]],[["networkbehaviouraction",4],["poll",4]]]],[11,"inject_event","","",3,[[]]],[11,"inject_event","","",5,[[["kademliaevent",4]]]],[11,"new","","",3,[[["kademlia",3]]]],[11,"add_addresses","","",3,[[["peerid",3],["multiaddr",3],["publickey",3],["vec",3]]]],[11,"new","","",5,[[["trustgraph",3],["registry",3],["option",4],["kademliaconfig",3]]]],[11,"add_kad_node","","",5,[[["peerid",3],["multiaddr",3],["publickey",3],["vec",3]]]],[11,"bootstrap","","",5,[[["oneshotoutlet",6],["result",4]]]],[11,"local_lookup","","",5,[[["peerid",3],["oneshotoutlet",6],["vec",3]]]],[11,"discover_peer","","",5,[[["peerid",3],["oneshotoutlet",6],["result",4]]]],[11,"neighborhood","","",5,[[["oneshotoutlet",6],["result",4],["multihash",6]]]]],"p":[[8,"KademliaApiT"],[3,"KademliaConfig"],[4,"KademliaError"],[3,"KademliaApiInlet"],[3,"KademliaApi"],[3,"Kademlia"]]},\
"particle_closures":{"doc":"","i":[[3,"HostClosures","particle_closures","",null,null],[12,"create_service","","",0,null],[12,"call_service","","",0,null],[12,"add_module","","",0,null],[12,"add_blueprint","","",0,null],[12,"get_modules","","",0,null],[12,"get_blueprints","","",0,null],[12,"add_provider","","",0,null],[12,"get_providers","","",0,null],[12,"get_interface","","",0,null],[12,"get_active_interfaces","","",0,null],[12,"identify","","",0,null],[12,"connectivity","","",0,null],[12,"script_storage","","",0,null],[3,"NodeInfo","","",null,null],[12,"external_addresses","","",1,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["ok",3],["result",4]]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"clone","","",0,[[],["hostclosures",3]]],[11,"clone","","",1,[[],["nodeinfo",3]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"serialize","","",1,[[],["result",4]]],[11,"new","","",0,[[["nodeinfo",3],["servicesconfig",3],["scriptstorageapi",3]]]],[11,"descriptor","","",0,[[],["closuredescriptor",6]]]],"p":[[3,"HostClosures"],[3,"NodeInfo"]]},\
"particle_modules":{"doc":"","i":[[3,"Blueprint","particle_modules","",null,null],[12,"name","","",0,null],[12,"id","","",0,null],[12,"dependencies","","",0,null],[4,"ModuleError","","",null,null],[13,"AddModule","","",1,null],[12,"path","particle_modules::ModuleError","",2,null],[12,"err","","",2,null],[13,"SerializeConfig","particle_modules","",1,null],[12,"err","particle_modules::ModuleError","",3,null],[13,"WriteConfig","particle_modules","",1,null],[12,"path","particle_modules::ModuleError","",4,null],[12,"err","","",4,null],[13,"NoSuchBlueprint","particle_modules","",1,null],[12,"path","particle_modules::ModuleError","",5,null],[12,"err","","",5,null],[13,"IncorrectBlueprint","particle_modules","",1,null],[12,"err","particle_modules::ModuleError","",6,null],[13,"NoModuleConfig","particle_modules","",1,null],[12,"path","particle_modules::ModuleError","",7,null],[12,"err","","",7,null],[13,"IncorrectModuleConfig","particle_modules","",1,null],[12,"err","particle_modules::ModuleError","",8,null],[13,"ModuleConvertError","particle_modules","",1,null],[12,"err","particle_modules::ModuleError","",9,null],[13,"WriteBlueprint","particle_modules","",1,null],[12,"path","particle_modules::ModuleError","",10,null],[12,"err","","",10,null],[5,"is_service","particle_modules","",null,[[["pathbuf",3]]]],[5,"service_file_name","","",null,[[],["string",3]]],[5,"list_files","","List files in directory",null,[[["pathbuf",3]],["option",4]]],[5,"load_blueprint","","Load blueprint from disk",null,[[["pathbuf",3]],[["moduleerror",4],["blueprint",3],["result",4]]]],[5,"load_module_config","","Load FaaSModuleConfig from disk, for a given module name",null,[[["pathbuf",3]],[["moduleerror",4],["result",4]]]],[5,"add_blueprint","","Saves new blueprint to disk",null,[[["pathbuf",3]],["closure",6]]],[5,"add_module","","Adds a module to the filesystem, overwriting existing …",null,[[["pathbuf",3]],["closure",6]]],[5,"get_blueprints","","Get available blueprints",null,[[["pathbuf",3]],["closure",6]]],[5,"get_modules","","Get available modules (intersection of modules from …",null,[[["pathbuf",3]],["closure",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"clone","","",0,[[],["blueprint",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]]],"p":[[3,"Blueprint"],[4,"ModuleError"],[13,"AddModule"],[13,"SerializeConfig"],[13,"WriteConfig"],[13,"NoSuchBlueprint"],[13,"IncorrectBlueprint"],[13,"NoModuleConfig"],[13,"IncorrectModuleConfig"],[13,"ModuleConvertError"],[13,"WriteBlueprint"]]},\
"particle_node":{"doc":"","i":[[0,"config","particle_node","",null,null],[0,"certificates","particle_node::config","",null,null],[5,"init","particle_node::config::certificates","Loads all certificates from a disk. Creates a root …",null,[[["keypair",3]],[["vec",3],["result",6]]]],[5,"load_certificates","","Reads all files in <code>cert_dir</code> as certificates. Throw an …",null,[[],[["vec",3],["result",6]]]],[5,"store_root_certificate","","",null,[[["keypair",3],["duration",3]],[["error",3],["result",4],["certificate",3]]]],[5,"create_args","particle_node::config","",null,[[],[["arg",3],["vec",3]]]],[3,"NetworkBehaviour","particle_node","Coordinates protocols, so they can cooperate",null,null],[5,"write_default_air_interpreter","","",null,[[],["result",6]]],[3,"Node","","",null,null],[12,"network_api","","",0,null],[12,"swarm","","",0,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"new_handler","","",1,[[]]],[11,"addresses_of_peer","","",1,[[["peerid",3]],[["multiaddr",3],["vec",3]]]],[11,"inject_connected","","",1,[[["peerid",3]]]],[11,"inject_disconnected","","",1,[[["peerid",3]]]],[11,"inject_connection_established","","",1,[[["connectedpoint",4],["peerid",3],["connectionid",3]]]],[11,"inject_address_change","","",1,[[["connectedpoint",4],["peerid",3],["connectionid",3]]]],[11,"inject_connection_closed","","",1,[[["connectedpoint",4],["peerid",3],["connectionid",3]]]],[11,"inject_addr_reach_failure","","",1,[[["multiaddr",3],["error",8],["option",4],["peerid",3]]]],[11,"inject_dial_failure","","",1,[[["peerid",3]]]],[11,"inject_new_listen_addr","","",1,[[["multiaddr",3]]]],[11,"inject_expired_listen_addr","","",1,[[["multiaddr",3]]]],[11,"inject_new_external_addr","","",1,[[["multiaddr",3]]]],[11,"inject_listener_error","","",1,[[["listenerid",3],["error",8]]]],[11,"inject_listener_closed","","",1,[[["listenerid",3],["error",3],["result",4]]]],[11,"inject_event","","",1,[[["peerid",3],["connectionid",3]]]],[11,"poll","","",1,[[["context",3]],[["networkbehaviouraction",4],["poll",4]]]],[11,"inject_event","","",1,[[["identifyevent",4]]]],[11,"inject_event","","",1,[[]]],[11,"inject_event","","",1,[[["pingevent",3]]]],[11,"new","","",0,[[["keypair",3],["nodeconfig",3]],[["result",6],["box",3]]]],[11,"with","","",0,[[["socketaddr",4],["networkconfig",3],["vec",3],["option",4],["vmpoolconfig",3],["multiaddr",3],["boxed",3],["scriptstorageconfig",3],["peerid",3],["servicesconfig",3],["registry",3]],[["result",6],["box",3]]]],[11,"start","","Starts node service",0,[[["box",3]],["oneshotoutlet",6]]],[11,"listen","","Starts node service listener.",0,[[],[["result",4],["transporterror",4]]]],[11,"new","","",1,[[["networkconfig",3]],["result",6]]]],"p":[[3,"Node"],[3,"NetworkBehaviour"]]},\
"particle_protocol":{"doc":"","i":[[4,"CompletionChannel","particle_protocol","",null,null],[13,"Ignore","","",0,null],[13,"Oneshot","","",0,null],[4,"HandlerMessage","","",null,null],[13,"OutParticle","","Particle being sent to remote peer. Contains a channel to …",1,null],[13,"InParticle","","Particle being received from a remote peer. Receive-only, …",1,null],[13,"InboundUpgradeError","","Error while receiving a message",1,null],[13,"Upgrade","","Dummy plug. Generated by the <code>OneshotHandler</code> when Inbound …",1,null],[3,"ProtocolConfig","","",null,null],[12,"upgrade_timeout","","Timeout for applying the given upgrade on a substream",2,null],[12,"keep_alive_timeout","","Keep-alive timeout for idle connections.",2,null],[12,"outbound_substream_timeout","","Timeout for outbound substream upgrades.",2,null],[3,"Particle","","",null,null],[12,"id","","",3,null],[12,"init_peer_id","","",3,null],[12,"timestamp","","",3,null],[12,"ttl","","",3,null],[12,"script","","",3,null],[12,"signature","","",3,null],[12,"data","","base64-encoded",3,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"into","","",1,[[]]],[11,"into","","",2,[[],[["oneshothandler",3],["protocolconfig",3]]]],[11,"clone","","",2,[[],["protocolconfig",3]]],[11,"clone","","",3,[[],["particle",3]]],[11,"default","","",0,[[]]],[11,"default","","",2,[[]]],[11,"default","","",3,[[]]],[11,"eq","","",3,[[["particle",3]]]],[11,"ne","","",3,[[["particle",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"upgrade_inbound","","",2,[[]]],[11,"upgrade_outbound","","",1,[[]]],[11,"protocol_info","","",2,[[]]],[11,"protocol_info","","",1,[[]]],[11,"outlet","","",0,[[],[["oneshotoutlet",6],["option",4]]]],[11,"new","","",2,[[["duration",3]]]]],"p":[[4,"CompletionChannel"],[4,"HandlerMessage"],[3,"ProtocolConfig"],[3,"Particle"]]},\
"particle_providers":{"doc":"This crate describes how providers are stored in memory","i":[[3,"Provider","particle_providers","A representation of a service provider",null,null],[12,"peer","","Peer id of the node that acts as a provider",0,null],[12,"service_id","","Optional service_id If defined, an app service is …",0,null],[4,"ProviderError","","Errors that happen during <code>ProviderRepository</code> reading or …",null,null],[13,"Poisoned","","The whole repository was poisoned by a panic",1,null],[13,"KeyPoisoned","","Only a single key was poisoned by a panic",1,null],[3,"ProviderRepository","","Thread-safe storage of providers",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"get_hash","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"as_fail","","",1,[[],["fail",8]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"eq","","",0,[[["provider",3]]]],[11,"ne","","",0,[[["provider",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"hash","","",0,[[]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"new","","Constructor",2,[[["peerid",3]]]],[11,"get_providers","","Creates a closure that takes <code>key</code> as a parameter, and …",2,[[],["closure",6]]],[11,"add_provider","","Creates a closure that takes a <code>Provider</code> instance as an …",2,[[],["closure",6]]]],"p":[[3,"Provider"],[4,"ProviderError"],[3,"ProviderRepository"]]},\
"particle_services":{"doc":"","i":[[3,"ParticleAppServices","particle_services","",null,null],[4,"IType","","Represents the types supported by WIT.",null,null],[13,"S8","","A 8-bits signed integer.",0,null],[13,"S16","","A 16-bits signed integer.",0,null],[13,"S32","","A 32-bits signed integer.",0,null],[13,"S64","","A 64-bits signed integer.",0,null],[13,"U8","","A 8-bits unsigned integer.",0,null],[13,"U16","","A 16-bits unsigned integer.",0,null],[13,"U32","","A 32-bits unsigned integer.",0,null],[13,"U64","","A 64-bits unsigned integer.",0,null],[13,"F32","","A 32-bits float.",0,null],[13,"F64","","A 64-bits float.",0,null],[13,"String","","A string.",0,null],[13,"Array","","An array of values of the same type.",0,null],[13,"Anyref","","An <code>any</code> reference.",0,null],[13,"I32","","A 32-bits integer (as defined in WebAssembly core).",0,null],[13,"I64","","A 64-bits integer (as defined in WebAssembly core).",0,null],[13,"Record","","A record contains record index from interfaces AST.",0,null],[4,"IValue","","A WIT value.",null,null],[13,"S8","","A 8-bits signed integer.",1,null],[13,"S16","","A 16-bits signed integer.",1,null],[13,"S32","","A 32-bits signed integer.",1,null],[13,"S64","","A 64-bits signed integer.",1,null],[13,"U8","","A 8-bits unsigned integer.",1,null],[13,"U16","","A 16-bits unsigned integer.",1,null],[13,"U32","","A 32-bits unsigned integer.",1,null],[13,"U64","","A 64-bits unsigned integer.",1,null],[13,"F32","","A 32-bits float.",1,null],[13,"F64","","A 64-bits float.",1,null],[13,"String","","A string.",1,null],[13,"Array","","A byte array.",1,null],[13,"I32","","A 32-bits integer (as defined in WebAssembly core).",1,null],[13,"I64","","A 64-bits integer (as defiend in WebAssembly core).",1,null],[13,"Record","","A record.",1,null],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"equivalent","","",0,[[]]],[11,"get_hash","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["result",4],["error",3],["ok",3]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"serialize","","",0,[[],["result",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[["string",3]],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"from","","",1,[[],["ivalue",4]]],[11,"deserialize","","",0,[[],[["itype",4],["result",4]]]],[11,"parse","","",0,[[["parser",3]],[["itype",4],["result",4],["error",3]]]],[11,"default","","",1,[[],["ivalue",4]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",0,[[],["itype",4]]],[11,"clone","","",1,[[],["ivalue",4]]],[11,"hash","","",0,[[]]],[11,"to_bytes","","",0,[[],[["error",3],["result",4]]]],[11,"eq","","",0,[[["itype",4]]]],[11,"ne","","",0,[[["itype",4]]]],[11,"eq","","",1,[[["ivalue",4]]]],[11,"ne","","",1,[[["ivalue",4]]]],[11,"new","","",2,[[["servicesconfig",3]]]],[11,"create_service","","",2,[[],["particleclosure",6]]],[11,"call_service","","",2,[[],["particleclosure",6]]],[11,"get_interface","","",2,[[],["closure",6]]],[11,"get_active_interfaces","","",2,[[],["closure",6]]]],"p":[[4,"IType"],[4,"IValue"],[3,"ParticleAppServices"]]},\
"script_storage":{"doc":"","i":[[3,"ScriptStorageConfig","script_storage","",null,null],[12,"timer_resolution","","Minimal interval of script execution",0,null],[12,"max_failures","","Script is deleted after this number of failures",0,null],[12,"particle_ttl","","ttl to set in generated particles",0,null],[12,"peer_id","","",0,null],[3,"ScriptStorageApi","","",null,null],[3,"ScriptStorageBackend","","",null,null],[4,"ScriptStorageError","","",null,null],[13,"OutletError","","",1,null],[13,"InletError","","",1,null],[13,"PermissionDenied","","",1,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"as_fail","","",1,[[],["fail",8]]],[11,"clone","","",0,[[],["scriptstorageconfig",3]]],[11,"clone","","",3,[[],["scriptstorageapi",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"new","","",2,[[["connectionpoolapi",3],["string",3],["scriptstorageconfig",3],["inlet",6]]]],[11,"start","","",2,[[],["joinhandle",3]]],[11,"add_script","","",3,[[["string",3],["option",4],["duration",3],["peerid",3]],[["string",3],["result",4],["scriptstorageerror",4]]]],[11,"remove_script","","",3,[[["string",3],["peerid",3]],[["result",4],["boxfuture",6]]]],[11,"list_scripts","","",3,[[],[["boxfuture",6],["result",4]]]]],"p":[[3,"ScriptStorageConfig"],[4,"ScriptStorageError"],[3,"ScriptStorageBackend"],[3,"ScriptStorageApi"]]},\
"server_config":{"doc":"","i":[[0,"config_keys","server_config","",null,null],[17,"BLUEPRINT_DIR","server_config::config_keys","",null,null],[17,"BOOTSTRAP_NODE","","",null,null],[17,"CERTIFICATE_DIR","","",null,null],[17,"CONFIG_FILE","","",null,null],[17,"EXTERNAL_ADDR","","",null,null],[17,"ROOT_KEY_PAIR","","",null,null],[17,"SERVICES_WORKDIR","","",null,null],[17,"SERVICE_ENVS","","",null,null],[17,"TCP_PORT","","",null,null],[17,"WEBSOCKET_PORT","","",null,null],[5,"default_air_interpreter_path","server_config","",null,[[],["pathbuf",3]]],[5,"deserialize_config","","",null,[[["vec",3],["argmatches",3]],[["result",6],["fluenceconfig",3]]]],[5,"load_config","","",null,[[["argmatches",3]],[["result",6],["fluenceconfig",3]]]],[3,"AppServicesConfig","","",null,null],[12,"blueprint_dir","","Path of the blueprint directory containing blueprints and …",0,null],[12,"service_envs","","Opaque environment variables to be passed on each service …",0,null],[12,"workdir","","Working dir for services",0,null],[12,"modules_dir","","Dir to store .wasm modules and their configs",0,null],[12,"services_dir","","Dir to persist info about running services",0,null],[3,"BootstrapConfig","","",null,null],[12,"reconnect_delay","","",1,null],[12,"bootstrap_delay","","",1,null],[12,"bootstrap_max_delay","","",1,null],[3,"FluenceConfig","","",null,null],[12,"server","","",2,null],[12,"certificate_dir","","Directory, where all certificates are stored.",2,null],[12,"root_key_pair","","",2,null],[3,"NodeConfig","","",null,null],[12,"tcp_port","","For TCP connections",3,null],[12,"listen_ip","","Local ip address to listen on",3,null],[12,"socket_timeout","","Socket timeout for main transport",3,null],[12,"bootstrap_nodes","","Bootstrap nodes to join to the Fluence network",3,null],[12,"websocket_port","","For ws connections",3,null],[12,"external_address","","External address to advertise via identify protocol",3,null],[12,"external_multiaddresses","","External multiaddresses to advertise; more flexible that …",3,null],[12,"prometheus_port","","Prometheus port",3,null],[12,"bootstrap_config","","",3,null],[12,"root_weights","","",3,null],[12,"services_base_dir","","Base directory for resources needed by application …",3,null],[12,"services_envs","","",3,null],[12,"stepper_base_dir","","Base directory for resources needed by application …",3,null],[12,"protocol_config","","",3,null],[12,"stepper_pool_size","","Number of stepper VMs to create. By default, …",3,null],[12,"air_interpreter_path","","Path to AIR interpreter .wasm file (aquamarine.wasm)",3,null],[12,"kademlia","","",3,null],[12,"particle_queue_buffer","","",3,null],[12,"particle_processor_parallelism","","",3,null],[12,"script_storage_timer_resolution","","",3,null],[12,"script_storage_max_failures","","",3,null],[12,"script_storage_particle_ttl","","",3,null],[3,"KademliaConfig","","see <code>libp2p_kad::KademliaConfig</code>",null,null],[12,"max_packet_size","","",4,null],[12,"query_timeout","","",4,null],[12,"replication_factor","","",4,null],[12,"connection_idle_timeout","","",4,null],[3,"ListenConfig","","",null,null],[12,"listen_ip","","",5,null],[12,"tcp_port","","",5,null],[12,"websocket_port","","",5,null],[3,"NetworkConfig","","",null,null],[12,"key_pair","","",6,null],[12,"local_peer_id","","",6,null],[12,"trust_graph","","",6,null],[12,"bootstrap_nodes","","",6,null],[12,"bootstrap","","",6,null],[12,"registry","","",6,null],[12,"protocol_config","","",6,null],[12,"kademlia_config","","",6,null],[12,"particle_queue_buffer","","",6,null],[12,"particle_parallelism","","",6,null],[3,"ServicesConfig","","",null,null],[12,"local_peer_id","","Peer id of the current node",7,null],[12,"blueprint_dir","","Path of the blueprint directory containing blueprints and …",7,null],[12,"envs","","Opaque environment variables to be passed on each service …",7,null],[12,"workdir","","Working dir for services",7,null],[12,"modules_dir","","Dir to store .wasm modules and their configs",7,null],[12,"services_dir","","Dir to persist info about running services",7,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"into","","",4,[[],["libp2pkadconfig",3]]],[11,"clone","","",0,[[],["appservicesconfig",3]]],[11,"clone","","",1,[[],["bootstrapconfig",3]]],[11,"clone","","",3,[[],["nodeconfig",3]]],[11,"clone","","",4,[[],["kademliaconfig",3]]],[11,"clone","","",5,[[],["listenconfig",3]]],[11,"clone","","",7,[[],["servicesconfig",3]]],[11,"default","","",1,[[]]],[11,"default","","",4,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"serialize","","",1,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"new","","",0,[[["vec",3],["string",3]],[["result",4],["error",3]]]],[11,"create_dirs","","",0,[[],[["error",3],["result",4]]]],[11,"zero","","Creates config with all values to zero, so no delays. …",1,[[],["bootstrapconfig",3]]],[11,"external_addresses","","",3,[[],[["multiaddr",3],["vec",3]]]],[11,"root_weights","","",3,[[],["vec",3]]],[11,"metrics_listen_addr","","",3,[[],["socketaddr",4]]],[11,"listen_config","","",3,[[],["listenconfig",3]]],[11,"multiaddrs","","",5,[[],[["multiaddr",3],["vec",3]]]],[11,"new","","",6,[[["trustgraph",3],["keypair",3],["option",4],["registry",3],["nodeconfig",3]]]],[11,"new","","",7,[[["pathbuf",3],["hashmap",3],["peerid",3],["vec",3]],[["result",4],["error",3]]]]],"p":[[3,"AppServicesConfig"],[3,"BootstrapConfig"],[3,"FluenceConfig"],[3,"NodeConfig"],[3,"KademliaConfig"],[3,"ListenConfig"],[3,"NetworkConfig"],[3,"ServicesConfig"]]},\
"test_utils":{"doc":"","i":[[4,"ClientEvent","test_utils","",null,null],[13,"Particle","","",0,null],[12,"sender","test_utils::ClientEvent","",1,null],[12,"particle","","",1,null],[13,"NewConnection","test_utils","",0,null],[12,"peer_id","test_utils::ClientEvent","",2,null],[12,"multiaddr","","",2,null],[3,"ConnectedClient","test_utils","",null,null],[12,"client","","",3,null],[12,"node","","",3,null],[12,"node_address","","",3,null],[12,"timeout","","",3,null],[12,"short_timeout","","",3,null],[12,"kad_timeout","","",3,null],[5,"connect_swarms","","",null,[[]]],[5,"connect_real","","",null,[[]]],[4,"Instruction","","",null,null],[13,"Seq","","",4,null],[13,"Call","","",4,null],[13,"Null","","",4,null],[5,"pass_data_func","","",null,[[["jvalue",4],["hashmap",3]],["callserviceclosure",6]]],[5,"return_data_func","","",null,[[["mutex",6],["arc",3]],["callserviceclosure",6]]],[5,"make_particle","","",null,[[["string",3],["jvalue",4],["hashmap",3],["peerid",3]],["particle",3]]],[5,"read_args","","",null,[[["peerid",3],["particle",3]],[["jvalue",4],["vec",3]]]],[6,"Result","","Utility functions for tests.",null,null],[7,"TIMEOUT","","In debug, VM startup time is big, account for that",null,null],[7,"SHORT_TIMEOUT","","",null,null],[7,"KAD_TIMEOUT","","",null,null],[5,"uuid","","",null,[[],["string",3]]],[5,"get_cert","","",null,[[],["certificate",3]]],[5,"enable_logs","","",null,[[]]],[3,"CreatedSwarm","","",null,null],[12,"0","","",5,null],[12,"1","","",5,null],[12,"2","","",5,null],[12,"3","","",5,null],[5,"make_swarms","","",null,[[],[["vec",3],["createdswarm",3]]]],[5,"make_swarms_with_cfg","","",null,[[],[["vec",3],["createdswarm",3]]]],[5,"make_swarms_with","","",null,[[],[["vec",3],["createdswarm",3]]]],[3,"Trust","","",null,null],[12,"root_weights","","",6,null],[12,"certificates","","",6,null],[12,"cur_time","","",6,null],[3,"SwarmConfig","","",null,null],[12,"bootstraps","","",7,null],[12,"listen_on","","",7,null],[12,"trust","","",7,null],[12,"transport","","",7,null],[12,"tmp_dir","","",7,null],[5,"create_swarm","","",null,[[["swarmconfig",3]]]],[5,"create_memory_maddr","","",null,[[],["multiaddr",3]]],[5,"make_tmp_dir","","",null,[[],["pathbuf",3]]],[5,"remove_dir","","",null,[[["pathbuf",3]]]],[5,"put_aquamarine","","",null,[[["pathbuf",3]],["pathbuf",3]]],[5,"test_module","","",null,[[],["vec",3]]],[5,"test_module_cfg","","",null,[[],["jvalue",4]]],[5,"now","","",null,[[]]],[5,"timeout","","",null,[[["duration",3]]]],[3,"CreatedService","","",null,null],[12,"id","","",8,null],[5,"create_greeting_service","","",null,[[["connectedclient",3]],["createdservice",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["ok",3],["error",3],["result",4]]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",0,[[],["clientevent",4]]],[11,"serialize","","",0,[[],["result",4]]],[11,"deserialize","","",0,[[],[["clientevent",4],["result",4]]]],[11,"clone","","",6,[[],["trust",3]]],[11,"clone","","",7,[[],["swarmconfig",3]]],[11,"clone","","",8,[[],["createdservice",3]]],[11,"default","","",6,[[],["trust",3]]],[11,"default","","",7,[[]]],[11,"eq","","",4,[[["instruction",4]]]],[11,"ne","","",4,[[["instruction",4]]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"timeout","","",3,[[],["duration",3]]],[11,"short_timeout","","",3,[[],["duration",3]]],[11,"kad_timeout","","",3,[[],["duration",3]]],[11,"connect_to","","",3,[[["multiaddr",3]],["result",6]]],[11,"new","","",3,[[["client",3],["multiaddr",3],["peerid",3]]]],[11,"make_clients","","",3,[[],["result",6]]],[11,"send","","",3,[[["particle",3]]]],[11,"send_particle","","",3,[[["jvalue",4],["hashmap",3]],["string",3]]],[11,"maybe_receive","","",3,[[],[["option",4],["particle",3]]]],[11,"receive","","",3,[[],["particle",3]]],[11,"receive_args","","",3,[[],[["jvalue",4],["vec",3]]]],[11,"wait_particle_args","","Wait for a particle with specified <code>particle_id</code>, and read …",3,[[["string",3]],[["vec",3],["result",6]]]],[11,"add","","",4,[[["string",3]]]],[11,"into_air","","",4,[[],["string",3]]],[11,"new","","",7,[[["vec",3],["multiaddr",3]]]],[11,"with_trust","","",7,[[["vec",3],["multiaddr",3],["trust",3]]]]],"p":[[4,"ClientEvent"],[13,"Particle"],[13,"NewConnection"],[3,"ConnectedClient"],[4,"Instruction"],[3,"CreatedSwarm"],[3,"Trust"],[3,"SwarmConfig"],[3,"CreatedService"]]},\
"waiting_queues":{"doc":"","i":[[4,"Enqueued","waiting_queues","Represents a result of the enqueue_promise operation",null,null],[13,"New","","",0,null],[13,"Existing","","",0,null],[3,"WaitingQueues","","",null,null],[11,"new","","",1,[[]]],[11,"enqueue","","Inserts <code>item</code> in the queue associated with <code>key</code>",1,[[],["enqueued",4]]],[11,"remove","","Removes queue associated with <code>key</code>",1,[[]]],[11,"remove_with","","Removes items on key <code>k</code> that satisfy <code>remove</code> predicate …",1,[[]]],[11,"count","","Returns number of items on key <code>k</code>. Useful for debug.",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"default","","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[4,"Enqueued"],[3,"WaitingQueues"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);